#!/bin/bash
# ============================================================================
# –°–ö–†–ò–ü–¢ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø PRE-COMMIT
# ============================================================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

cd "$(dirname "$0")/.."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo -e "${BLUE}============================================${NC}"
    echo -e "${BLUE} $1${NC}"
    echo -e "${BLUE}============================================${NC}"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
check_success() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ pre-commit
find_precommit() {
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—É—Å–∫–∞ pre-commit
    if command -v uv >/dev/null 2>&1; then
        # –ï—Å–ª–∏ –µ—Å—Ç—å uv, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        echo "uv run pre-commit"
    elif [ -f ".venv/bin/pre-commit" ]; then
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π .venv
        echo "$(pwd)/.venv/bin/pre-commit"
    elif [ -f "venv/bin/pre-commit" ]; then
        # –ï—Å–ª–∏ –µ—Å—Ç—å venv
        echo "$(pwd)/venv/bin/pre-commit"
    elif command -v pre-commit >/dev/null 2>&1; then
        # –ï—Å–ª–∏ pre-commit —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ
        echo "pre-commit"
    else
        echo ""
    fi
}

# –ù–∞–π–¥–µ–º pre-commit
PRECOMMIT=$(find_precommit)

if [ -z "$PRECOMMIT" ]; then
    echo -e "${RED}‚ùå Pre-commit –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑:${NC}"
    echo -e "${YELLOW}  uv add --dev pre-commit${NC}"
    echo -e "${YELLOW}  –∏–ª–∏${NC}"
    echo -e "${YELLOW}  pip install pre-commit${NC}"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è (—Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ)
if [ "$DEBUG" = "true" ]; then
    echo -e "${BLUE}üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $PRECOMMIT${NC}"
fi

case "$1" in
    "install")
        print_header "–£–°–¢–ê–ù–û–í–ö–ê PRE-COMMIT HOOKS"
        $PRECOMMIT install
        check_success "Pre-commit hooks —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;

    "run")
        print_header "–ó–ê–ü–£–°–ö –í–°–ï–• PRE-COMMIT –ü–†–û–í–ï–†–û–ö"
        $PRECOMMIT run --all-files
        check_success "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
        ;;

    "ruff")
        print_header "–ü–†–û–í–ï–†–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–î–ê (RUFF)"
        $PRECOMMIT run ruff --all-files
        check_success "Ruff –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;

    "format")
        print_header "–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–î–ê"
        $PRECOMMIT run ruff-format --all-files
        check_success "–ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω"
        ;;

    "mypy")
        print_header "–ü–†–û–í–ï–†–ö–ê –¢–ò–ü–û–í (MYPY)"
        $PRECOMMIT run mypy --all-files
        check_success "MyPy –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;

    "update")
        print_header "–û–ë–ù–û–í–õ–ï–ù–ò–ï PRE-COMMIT HOOKS"
        $PRECOMMIT autoupdate
        check_success "Hooks –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
        ;;

    "clean")
        print_header "–û–ß–ò–°–¢–ö–ê PRE-COMMIT –ö–≠–®–ê"
        $PRECOMMIT clean
        check_success "–ö—ç—à –æ—á–∏—â–µ–Ω"
        ;;

    *)
        echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/precommit.sh [–∫–æ–º–∞–Ω–¥–∞]${NC}"
        echo
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
        echo -e "  ${GREEN}install${NC}  - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pre-commit hooks"
        echo -e "  ${GREEN}run${NC}      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"
        echo -e "  ${GREEN}ruff${NC}     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ —Å Ruff"
        echo -e "  ${GREEN}format${NC}   - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"
        echo -e "  ${GREEN}mypy${NC}     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã —Å MyPy"
        echo -e "  ${GREEN}update${NC}   - –û–±–Ω–æ–≤–∏—Ç—å hooks"
        echo -e "  ${GREEN}clean${NC}    - –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à"
        ;;
esac
